version: '3'

services:
  kafka:
    image: confluentinc/cp-kafka:${CONFLUENT_VERSION:-5.3.1}
    restart: always
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_NUM_PARTITIONS=3
      - CONFLUENT_SUPPORT_METRICS_ENABLE=0
    ports: ["9092:9092"]
    links: [zookeeper]

  zookeeper:
    hostname: zookeeper
    restart: always
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:${CONFLUENT_VERSION:-5.3.1}
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports: ["2181:2181"]

  redis-server:
    hostname: redis
    container_name: redis
    image: 'redis'
    ports:
     - "6379:6379"
    volumes:
      - ./src/redislib/backup:/data 
      - ./src/redislib/config:/config/redis.conf
    command: redis-server --include /config/redis.conf

  rabbitmq: 
    image: rabbitmq:3.9-management #rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  postgresql-master:
    image: docker.io/bitnami/postgresql:11
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - 'postgresql_master_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=my_password
      - POSTGRESQL_DATABASE=my_database
      - ALLOW_EMPTY_PASSWORD=yes
  postgresql-slave:
    image: docker.io/bitnami/postgresql:11
    ports:
      - '5005:5432'
    depends_on:
      - postgresql-master
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=repl_user
      - POSTGRESQL_REPLICATION_PASSWORD=repl_password
      - POSTGRESQL_MASTER_HOST=postgresql-master
      - POSTGRESQL_PASSWORD=my_password
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
      - ALLOW_EMPTY_PASSWORD=yes

volumes:
  postgresql_master_data:
    driver: local
      

  # postgres:
  #   image: postgres
  #   container_name: postgres
  #   restart: always
  #   ports:
  #       - 5000:5432  
  #   environment:
  #     POSTGRES_DB: my_database
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     DB_BACKUP: true
  #   # volumes:
  #     # - ./backupme.sql:/usr/backupme.sql
  #   # command: sh -c 'PGPASSWORD=postgres && psql -U postgres my_database < usr/backupme.sql'
      

  # rust-app:
  #   restart: always
    # stdin_open: true
    # environment:
    #   - CHOKIDAR_USEPOLLING=true
    # build: .
    # volumes:
    #  - /twilight_price_feeder/target
    #  - ./:/twilight_price_feeder

# volumes:
#   database-data: # named volumes can be managed easier using docker-compose
